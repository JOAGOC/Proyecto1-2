
import java.awt.event.ActionEvent;
import java.util.Arrays;

import javax.sound.midi.SysexMessage;

import static javax.swing.JOptionPane.showMessageDialog;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.data.xy.XYSeries;
import org.jfree.data.xy.XYSeriesCollection;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Angel
 */
public class VentanaArrayEntero extends javax.swing.JFrame {

    private static final String anc = "El arreglo no ha sido creado";
    private static final String piun = "Por favor Inserta un número";
    private static final String TE = "Tiempo de ejecución: ";

    /**
     * Creates new form Ventana
     */
    public static VentanaArrayEntero getInstance() {
        if (instance == null)
            instance = new VentanaArrayEntero();
        return instance;
    }

    private VentanaArrayEntero() {
        initComponents();
        addWindowListener(VentanaPrincipal.escuchaHijo);
        m = (javax.swing.table.DefaultTableModel) jTDato.getModel();
        collection = new XYSeriesCollection();
        series1 = new XYSeries("Ord Burbuja");
        collection.addSeries(series1);
        series2 = new XYSeries("QuickSort (Iterativo)");
        collection.addSeries(series2);
        series3 = new XYSeries("QuickSort (Recursivo)");
        collection.addSeries(series3);
        series4 = new XYSeries("Búsqueda Secuencial");
        collection.addSeries(series4);
        series5 = new XYSeries("Búsqueda Binaria Recursiva");
        collection.addSeries(series5);
        jfc = ChartFactory.createXYLineChart("Coste de algoritmo", "Iteración", "Tiempo", collection,
                PlotOrientation.VERTICAL, true, false, false);
        ChartPanel oPanel = new ChartPanel(jfc);
        panelG.setLayout(new java.awt.BorderLayout());
        panelG.add(oPanel);
        panelG.validate();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated
    // Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jLabel1 = new javax.swing.JLabel();
        tFTamanio = new javax.swing.JTextField();
        btnCrear = new javax.swing.JButton();
        btnInicializar = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        tFDato = new javax.swing.JTextField();
        btnInsertar = new javax.swing.JButton();
        btnSacar = new javax.swing.JButton();
        btnRestablecerArreglo = new javax.swing.JButton();
        btnOrdenarBurbuja = new javax.swing.JButton();
        lblTiempoOrdenarBurbuja = new javax.swing.JLabel();
        btnOrdenarQS = new javax.swing.JButton();
        lblTiempoBusquedaSecuencial = new javax.swing.JLabel();
        btnBusquedaSecuencial = new javax.swing.JButton();
        lblOrdenar2 = new javax.swing.JLabel();
        tFBusqueda = new javax.swing.JTextField();
        btnBuscarBR = new javax.swing.JButton();
        btnOrdenarQSR = new javax.swing.JButton();
        lblTiempoOrdenarQuickSortR = new javax.swing.JLabel();
        lblTiempoQuickSortIterativo = new javax.swing.JLabel();
        panelG = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTDato = new javax.swing.JTable();
        lblTiempoBusquedaBinariaR = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTDato1 = new javax.swing.JTable();

        setMinimumSize(new java.awt.Dimension(380, 460));
        getContentPane().setLayout(new java.awt.GridBagLayout());

        jLabel1.setText("Tamaño");
        jLabel1.setVerifyInputWhenFocusTarget(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 10);
        getContentPane().add(jLabel1, gridBagConstraints);

        tFTamanio.setPreferredSize(new java.awt.Dimension(60, 20));
        tFTamanio.setVerifyInputWhenFocusTarget(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipady = 5;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(tFTamanio, gridBagConstraints);

        btnCrear.setText("Crear");
        btnCrear.setVerifyInputWhenFocusTarget(false);
        btnCrear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCrearActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(btnCrear, gridBagConstraints);

        btnInicializar.setText("Inicializar");
        btnInicializar.setVerifyInputWhenFocusTarget(false);
        btnInicializar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInicializarActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(btnInicializar, gridBagConstraints);

        jLabel2.setText("Dato");
        jLabel2.setVerifyInputWhenFocusTarget(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(jLabel2, gridBagConstraints);

        tFDato.setPreferredSize(new java.awt.Dimension(60, 20));
        tFDato.setVerifyInputWhenFocusTarget(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipady = 5;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(tFDato, gridBagConstraints);

        btnInsertar.setText("Insertar");
        btnInsertar.setVerifyInputWhenFocusTarget(false);
        btnInsertar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInsertarActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 1;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(btnInsertar, gridBagConstraints);

        btnSacar.setText("Sacar");
        btnSacar.setVerifyInputWhenFocusTarget(false);
        btnSacar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSacarActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 1;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(btnSacar, gridBagConstraints);

        btnRestablecerArreglo.setText("Restablecer");
        btnRestablecerArreglo.setVerifyInputWhenFocusTarget(false);
        btnRestablecerArreglo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRestablecerArregloActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 10);
        getContentPane().add(btnRestablecerArreglo, gridBagConstraints);

        btnOrdenarBurbuja.setText("Ordenar Burbuja");
        btnOrdenarBurbuja.setVerifyInputWhenFocusTarget(false);
        btnOrdenarBurbuja.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOrdenarBurbujaActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(btnOrdenarBurbuja, gridBagConstraints);

        lblTiempoOrdenarBurbuja.setText("Tiempo de ejecución: ");
        lblTiempoOrdenarBurbuja.setVerifyInputWhenFocusTarget(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(lblTiempoOrdenarBurbuja, gridBagConstraints);

        btnOrdenarQS.setText("Ordenar QuickSort");
        btnOrdenarQS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOrdenarQSActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(btnOrdenarQS, gridBagConstraints);

        lblTiempoBusquedaSecuencial.setText("Tiempo de ejecución: ");
        lblTiempoBusquedaSecuencial.setVerifyInputWhenFocusTarget(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(lblTiempoBusquedaSecuencial, gridBagConstraints);

        btnBusquedaSecuencial.setText("Búsqueda Secuencial");
        btnBusquedaSecuencial.setVerifyInputWhenFocusTarget(false);
        btnBusquedaSecuencial.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBusquedaSecuencialActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(btnBusquedaSecuencial, gridBagConstraints);

        lblOrdenar2.setText("Buscar:");
        lblOrdenar2.setVerifyInputWhenFocusTarget(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 5;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(lblOrdenar2, gridBagConstraints);

        tFBusqueda.setVerifyInputWhenFocusTarget(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(tFBusqueda, gridBagConstraints);

        btnBuscarBR.setText("Búsqueda Binaria R");
        btnBuscarBR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarBRActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(btnBuscarBR, gridBagConstraints);

        btnOrdenarQSR.setText("Ordenar QuickSortR");
        btnOrdenarQSR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOrdenarQSRActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(btnOrdenarQSR, gridBagConstraints);

        lblTiempoOrdenarQuickSortR.setText("Tiempo de ejecución: ");
        lblTiempoOrdenarQuickSortR.setVerifyInputWhenFocusTarget(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(lblTiempoOrdenarQuickSortR, gridBagConstraints);

        lblTiempoQuickSortIterativo.setText("Tiempo de ejecución: ");
        lblTiempoQuickSortIterativo.setVerifyInputWhenFocusTarget(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(lblTiempoQuickSortIterativo, gridBagConstraints);

        panelG.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        panelG.setVerifyInputWhenFocusTarget(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.RELATIVE;
        gridBagConstraints.gridheight = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 200;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        getContentPane().add(panelG, gridBagConstraints);

        jScrollPane1.setPreferredSize(new java.awt.Dimension(80, 80));
        jScrollPane1.setVerifyInputWhenFocusTarget(false);

        jTDato.setModel(new javax.swing.table.DefaultTableModel(new Object[][] {

        }, new String[] { "Dato" }));
        jScrollPane1.setViewportView(jTDato);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridheight = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
        gridBagConstraints.ipadx = 30;
        gridBagConstraints.ipady = 42;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 10, 0);
        getContentPane().add(jScrollPane1, gridBagConstraints);

        lblTiempoBusquedaBinariaR.setText("Tiempo de ejecución: ");
        lblTiempoBusquedaBinariaR.setVerifyInputWhenFocusTarget(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(lblTiempoBusquedaBinariaR, gridBagConstraints);

        jScrollPane2.setPreferredSize(new java.awt.Dimension(80, 80));
        jScrollPane2.setVerifyInputWhenFocusTarget(false);

        jTDato1.setModel(new javax.swing.table.DefaultTableModel(new Object[][] {

        }, new String[] { "Dato" }));
        jScrollPane2.setViewportView(jTDato1);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridheight = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
        gridBagConstraints.ipadx = 30;
        gridBagConstraints.ipady = 42;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 10, 0);
        getContentPane().add(jScrollPane2, gridBagConstraints);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnOrdenarQSActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btnOrdenarQSActionPerformed
        try {
            long ti = System.nanoTime();
            a.qSort();
            lblTiempoQuickSortIterativo.setText(TE + (System.nanoTime() - ti));
            btnMostrarActionPerformed(null);
             series2.clear();
              for (int i = 1,lim=a.getTope()-1; i <= lim; i++) {
                series2.add(i, i*Math.log(i)*Math.log(i));
            }
        } catch (NullPointerException e) {
            showMessageDialog(this, anc);
        }
    }// GEN-LAST:event_btnOrdenarQSActionPerformed

    private void btnRestablecerArregloActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btnRestablecerArregloActionPerformed
        try {
            a = (ArrayEntero) b.clone();
            btnMostrarActionPerformed(null);
        } catch (Exception e) {  //
        }
    }// GEN-LAST:event_btnRestablecerArregloActionPerformed

    private void btnOrdenarBurbujaActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btnOrdenarBurbujaActionPerformed
        try {
            lblTiempoOrdenarBurbuja.setText(TE + a.ordenar());
            btnMostrarActionPerformed(null);
            series1.clear();
            for (int i = 1,lim=a.getTope()-1; i <= lim; i++) {
                series1.add(i, 6*i*i-9*i+7);
            }
        } catch (NullPointerException e) {
            showMessageDialog(this, anc);
        }
    }// GEN-LAST:event_btnOrdenarBurbujaActionPerformed

    private void btnBusquedaSecuencialActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btnBusquedaSecuencialActionPerformed
        try {
            int pos;
            long ti = System.nanoTime();
            pos = a.busquedaSecuencial(Integer.parseInt(tFBusqueda.getText()));
            lblTiempoBusquedaSecuencial.setText(TE + (System.nanoTime() - ti));
            showMessageDialog(this, (pos == -1) ? "El número no ha sido encontrado"
                    : "El número ha sido encontrado en la posición " + pos);
            series4.clear();
            for (int i = 1,lim=a.getTope()-1; i <= lim; i++) {
                series4.add(i, 4*i+3);
            }
        } catch (NullPointerException e) {
            showMessageDialog(this, anc);
        } catch (NumberFormatException e) {
            showMessageDialog(this, piun + " entero");
        }
    }// GEN-LAST:event_btnBusquedaSecuencialActionPerformed

    private void btnBuscarBRActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btnBuscarBRActionPerformed
        try {
            int pos;
            long ti = System.nanoTime();
            pos = a.busquedaBinariaR(Integer.parseInt(tFBusqueda.getText()));
            lblTiempoBusquedaBinariaR.setText(TE + (System.nanoTime() - ti));
            btnMostrarActionPerformed(null);
            showMessageDialog(this, (pos == -1) ? "El número no ha sido encontrado"
                    : "El número ha sido encontrado en la posición " + pos);
            series5.clear();
            for (int i = 1,lim=a.getTope()-1; i <= lim; i++) {
                series5.add(i, Math.log(i)*Math.log(i));
            }
        } catch (NullPointerException e) {
            showMessageDialog(this, anc);
        } catch (NumberFormatException e) {
            showMessageDialog(this, piun + " entero");
        }
    }// GEN-LAST:event_btnBuscarBRActionPerformed

    private void btnOrdenarQSRActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btnOrdenarQSRActionPerformed
        try {
            long ti = System.nanoTime();
            a.quickSortR();
            lblTiempoOrdenarQuickSortR.setText(TE + (System.nanoTime() - ti));
            btnMostrarActionPerformed(null);
            series3.clear();
            for (int i = 1,lim=a.getTope()-1; i <= lim; i++) {
                series3.add(i, i*Math.log(i));
            }
        } catch (NullPointerException e) {
            showMessageDialog(this, anc);
        }
    }// GEN-LAST:event_btnOrdenarQSRActionPerformed

    private void btnSacarActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btnSacarActionPerformed
        try {
            a.sacar();
            m.removeRow(m.getRowCount() - 1);
        } catch (Exception e) {
            showMessageDialog(this, anc);
        }
    }// GEN-LAST:event_btnSacarActionPerformed

    private void btnInsertarActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btnInsertarActionPerformed
        try {
            a.insertar(Integer.parseInt(tFDato.getText()));
            tFDato.setText("");
            tFDato.requestFocus();
            Object[] x = { a.getA()[a.getTope() - 1] };
            m.addRow(x);

        } catch (NullPointerException e) {
            showMessageDialog(this, anc);
        } catch (NumberFormatException e) {
            showMessageDialog(this, piun + " entero");
        } catch (Exception e) {
            showMessageDialog(this, e.getMessage());
        }
    }// GEN-LAST:event_btnInsertarActionPerformed

    private void btnCrearActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btnCrearActionPerformed
        try {
            a = new ArrayEntero(Integer.parseInt(tFTamanio.getText()));
            tFTamanio.setText("");
            btnMostrarActionPerformed(null);
        } catch (NegativeArraySizeException e) {
            showMessageDialog(this, piun + " entero válido (positivo)");
        } catch (NumberFormatException e) {
            showMessageDialog(this, piun + " entero");
        }
    }// GEN-LAST:event_btnCrearActionPerformed

    private void btnInicializarActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btnInicializarActionPerformed
        try {
            a.inicializar();
            b = (ArrayEntero) a.clone();
            btnMostrarActionPerformed(null);
        } catch (Exception e) {
            showMessageDialog(this, anc);
        }
    }// GEN-LAST:event_btnInicializarActionPerformed

    private void btnMostrarActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btnMostrarActionPerformed
        try {
            m.setRowCount(0);
            for (int c = 0; c < a.getTope(); c++) {
                Object vector[] = new Object[1];
                vector[0] = a.getA()[c];
                m.addRow(vector);
            }
        } catch (NullPointerException e) {
            showMessageDialog(this, anc);
        }
    }// GEN-LAST:event_btnMostrarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        // <editor-fold defaultstate="collapsed" desc=" Look and feel setting code
        // (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the default
         * look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VentanaArrayEntero.class.getName()).log(java.util.logging.Level.SEVERE,
                    null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VentanaArrayEntero.class.getName()).log(java.util.logging.Level.SEVERE,
                    null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VentanaArrayEntero.class.getName()).log(java.util.logging.Level.SEVERE,
                    null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VentanaArrayEntero.class.getName()).log(java.util.logging.Level.SEVERE,
                    null, ex);
        }
        // </editor-fold>
        // </editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VentanaArrayEntero().setVisible(true);
            }
        });
    }

    private static VentanaArrayEntero instance;
    private javax.swing.table.DefaultTableModel m;
    private JFreeChart jfc;
    private ArrayEntero a;
    private ArrayEntero b;
    private XYSeriesCollection collection;
    private XYSeries series1;
    private XYSeries series2;
    private XYSeries series3;
    private XYSeries series4;
    private XYSeries series5;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBuscarBR;
    private javax.swing.JButton btnBusquedaSecuencial;
    private javax.swing.JButton btnCrear;
    private javax.swing.JButton btnInicializar;
    private javax.swing.JButton btnInsertar;
    private javax.swing.JButton btnOrdenarBurbuja;
    private javax.swing.JButton btnOrdenarQS;
    private javax.swing.JButton btnOrdenarQSR;
    private javax.swing.JButton btnRestablecerArreglo;
    private javax.swing.JButton btnSacar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTDato;
    private javax.swing.JTable jTDato1;
    private javax.swing.JLabel lblOrdenar2;
    private javax.swing.JLabel lblTiempoBusquedaBinariaR;
    private javax.swing.JLabel lblTiempoBusquedaSecuencial;
    private javax.swing.JLabel lblTiempoOrdenarBurbuja;
    private javax.swing.JLabel lblTiempoOrdenarQuickSortR;
    private javax.swing.JLabel lblTiempoQuickSortIterativo;
    private javax.swing.JPanel panelG;
    private javax.swing.JTextField tFBusqueda;
    private javax.swing.JTextField tFDato;
    private javax.swing.JTextField tFTamanio;
    // End of variables declaration//GEN-END:variables
}
